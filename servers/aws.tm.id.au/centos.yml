---

# TODO: Finish this based on the ubuntu.yml when that is completed.

- hosts: default
  become: yes

  vars:
    username: tim
    full_name: Tim Malone
    email: tdmalone@gmail.com
    timezone: Australia/Melbourne
    ssh_key: https://raw.githubusercontent.com/tdmalone/dotfiles/master/ssh.pub
    shell: /bin/bash
    hostname: centos.tm.id.au
    dist_upgrade: true # WARNING: Should only be used on brand new servers!
    ssh_port: "{{ lookup('env', 'SSH_PORT') }}"

  handlers:

    - name: restart ssh
      service:
        name: sshd
        state: restarted

  tasks:

    # @see http://docs.ansible.com/ansible/latest/modules/hostname_module.html
    - name: Set hostname to {{ hostname }}.
      hostname:
        name: "{{ hostname }}"

    # @see http://docs.ansible.com/ansible/latest/modules/lineinfile_module.html
    - name: Add hostname to /etc/hosts.
      lineinfile:
        dest: /etc/hosts
        regexp: "^127.0.0.1"
        line: "127.0.0.1 {{ hostname }}"

    # @see http://docs.ansible.com/ansible/latest/modules/timezone_module.html
    - name: Set timezone to {{ timezone }}.
      timezone:
        name: "{{ timezone }}"

    # @see http://docs.ansible.com/ansible/latest/modules/group_module.html
    - name: Ensure groups are present.
      group:
        name: "{{ item }}"
      with_items:
        - "{{ username }}"
        - docker
        - sudo

    # @see http://docs.ansible.com/ansible/latest/modules/user_module.html
    - name: Add user {{ username }}.
      user:
        name: "{{ username }}"
        comment: "{{ full_name }}"
        group: "{{ username }}"
        shell: "{{ shell }}"
        groups: "{{ username }},docker,sudo"

    # @see http://docs.ansible.com/ansible/latest/modules/authorized_key_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/lineinfile_module.html
    # @see https://github.com/vitalk/ansible-secure-ssh/blob/master/tasks/main.yml
    # @see https://www.cyberciti.biz/faq/how-to-disable-ssh-password-login-on-linux/
    - name: Add authorized_key for user {{ username }}.
      authorized_key:
        user: "{{ username }}"
        key: "{{ ssh_key }}"
      register: add_authorized_key

    - name: Change SSH port.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?Port"
        line: "Port {{ ssh_port }}"
      notify: restart ssh

    - name: Disable empty password login.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?PermitEmptyPasswords"
        line: "PermitEmptyPasswords no"
      notify: restart ssh

    - name: Disable remote root login.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin no"
      notify: restart ssh

    - name: Disable password login.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?PasswordAuthentication"
        line: "PasswordAuthentication no"
      notify: restart ssh

    - name: Enable public key authentication.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?PubkeyAuthentication"
        line: "PubkeyAuthentication yes"
      notify: restart ssh

    - name: Disable challenge response authentication.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?ChallengeResponseAuthentication"
        line: "ChallengeResponseAuthentication no"
      notify: restart ssh

    - name: Enable PAM.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?UsePAM"
        line: "UsePAM yes"
      notify: restart ssh

    # @see https://stackoverflow.com/a/37334415/1982136
    # @see http://docs.ansible.com/ansible/latest/modules/lineinfile_module.html
    - name: Allow 'sudo' group to have passwordless sudo.
      lineinfile:
        dest: /etc/sudoers
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL:ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'

...
