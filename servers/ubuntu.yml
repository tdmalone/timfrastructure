---

# TODO: Split up further into separate files for related groups of tasks.

# TODO: Support CentOS as well as Ubuntu (see ansible_os_family, ansible_pkg_mgr, ansible_distribution, ansible_distribution_file_variety, ansible_distribution_release, and ansible_distribution_version vars for help).

# TODO: Work out how to determine whether the system was created today or not, and use that to determine whether a dist-upgrade should be run. Running `sudo tune2fs -l /dev/xvda1 | grep created` should give the created date of the filesystem which is a pretty good way to determine system age, and then there's a bunch of useful facts in {{ansible_date_time}} to compare to current.

# TODO: Register with Ubuntu Landscape?

- hosts: all
  become: yes
  gather_facts: no # This won't work until we install the needed Python module (see below).

  vars:
    username: tim
    full_name: Tim Malone
    email: tdmalone@gmail.com
    timezone: Australia/Melbourne
    ssh_key: https://raw.githubusercontent.com/tdmalone/dotfiles/master/ssh.pub
    shell: /bin/zsh
    hostname: aws.tm.id.au
    aws_region: ap-southeast-2
    efs_id_1: fs-31ac5308 # Repos. TODO: Get these dynamically from Terraform, also set as an array.
    efs_id_2: fs-ab2ad592 # Downloads.
    efs_id_3: fs-db2bd4e2 # Webroot.
    new_system: false # WARNING: Should only be used on brand new servers!
    ssh_port: "{{ lookup('env', 'SSH_PORT') }}"

  handlers:

    - name: restart ssh
      service:
        name: ssh
        state: restarted

  pre_tasks:

    # @see https://stackoverflow.com/a/34402816/1982136
    # @see http://docs.ansible.com/ansible/latest/modules/raw_module.html
    - name: Check if python-simplejson is installed.
      raw: dpkg-query --show python-simplejson
      register: python_simplejson_installed
      failed_when: python_simplejson_installed.rc > 1
      changed_when: python_simplejson_installed.rc == 1
      check_mode: no # Run even in 'check' mode; the command is safe and we need the output.

    - name: If not, install python-simplejson for Ansible support.
      raw: sudo apt-get install --assume-yes python-simplejson
      when: "python_simplejson_installed.rc == 1"

    - name: Gather facts now that the needed Python module is installed.
      setup: # No args required.

  tasks:

    - name: Include tasks common to multiple distros.
      include_tasks: ./tasks/common.yml

    # TODO: Set up Papertrail monitoring.
    # @see https://github.com/reactiveops/ansible-papertrail
    # @see https://github.com/aptoma/ansible-papertrail
    # @see https://github.com/azavea/ansible-papertrail
    # @see PAPERTRAIL_HOST & PAPERTRAIL_PORT env vars.

    # TODO: Set up Datadog monitoring.
    # @see https://galaxy.ansible.com/manala/ansible-galaxy/ for possibly installing galaxy roles easily.
    # - include_role:
    #     name: Datadog.datadog
    #   vars:
    #     become: yes
    #     datadog_api_key: "{{ lookup('env', 'DATADOG_API_KEY') }}"

    # TODO: Copy across common Datadog configuration; restart Datadog agent.

    - name: Include git configuration.
      include_tasks: ./tasks/git.yml

    # Install Node.js.
    # @see https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions
    #curl --location https://deb.nodesource.com/setup_9.x | sudo --preserve-env bash /dev/stdin
    #sudo apt-get install --assume-yes nodejs

    # TODO: Install Go.

    - name: Include apt installations.
      include_tasks: ./tasks/apt.yml

    # @see https://github.com/papertrail/papertrail-cli
    # @see http://docs.ansible.com/ansible/2.4/gem_module.html
    - name: Install commonly used gems.
      gem:
        name: "{{ item }}"
      with_items:
        - papertrail
        - travis # TODO: Run once and press y to enable shell completion.

    - name: Include EFS mount.
      include_tasks: ./tasks/efs.yml
      tags:
        - mounts

    - name: Include amazon-ssm-agent installation.
      include_tasks: ./tasks/aws-ssm.yml

    # TODO: Set up an nginx vhost, and configure with php-fpm.
    # TODO: Install LastPass CLI.
    # TODO: Install AWS CLI.
    # TODO: Install Keybase CLI.

    # Check if wp-cli is installed.
    # Install wp-cli.
    # @see https://wp-cli.org/#installing
    #curl --remote-name https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    #chmod +x wp-cli.phar
    #sudo mv wp-cli.phar /usr/local/bin/wp

    - name: Include Hashicorp installations.
      include_tasks: ./tasks/hashicorp.yml

    # TODO: Install minikube.
    # @see https://github.com/kubernetes/minikube/releases

    # Install IBM Cloud CLI.
    #wget https://clis.ng.bluemix.net/download/bluemix-cli/0.6.6/linux64
    #tar -zxvf linux64 && rm linux64
    #Bluemix_CLI/install_bluemix_cli

    # TODO: Set up HTTPS for nginx with a LetsEncrypt certificate.
    # @see http://docs.ansible.com/ansible/latest/modules/letsencrypt_module.html

    # TODO: Install and set up a local WordPress site to manage tm.id.au.
    # @see http://docs.ansible.com/ansible/latest/modules/mysql_db_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/mysql_user_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/blockinfile_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/copy_module.html

    # TODO: Install oh-my-zsh.
    # TODO: Set up Cloud9 environment, if possible/neccessary?
    # TODO: Set up crontab with any regular jobs.
    # TODO: Symlink any neccessary configuration files to the cloned dotfiles (in EFS mount).
    # TODO: Set up SSH config and SSH keys (if possible to do it securely).

    - name: Include notification tasks.
      include_tasks: ./tasks/notifications.yml

    # TODO: Additional interesting roles to look into:
    #       - https://github.com/manala/ansible-role-accounts
    #       - https://github.com/manala/ansible-role-ansible
    #       - https://github.com/manala/ansible-role-ansible-galaxy
    #       - https://github.com/manala/ansible-role-cloud-init
    #       - https://github.com/manala/ansible-role-cron
    #       - https://github.com/manala/ansible-role-docker
    #       - https://github.com/manala/ansible-role-git
    #       - https://github.com/manala/ansible-role-logrotate
    #       - https://github.com/manala/ansible-role-mysql
    #       - https://github.com/manala/ansible-role-nginx
    #       - https://github.com/manala/ansible-role-ohmyzsh
    #       - https://github.com/manala/ansible-role-php
    #       - https://github.com/manala/ansible-role-phpmyadmin
    #       - https://github.com/manala/ansible-role-sudo
    #       - https://github.com/manala/ansible-role-systemd
    #       - https://github.com/manala/ansible-role-vim

...
