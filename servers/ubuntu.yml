---

# TODO: Support CentOS as well as Ubuntu (see ansible_os_family, ansible_pkg_mgr, ansible_distribution, ansible_distribution_file_variety, ansible_distribution_release, and ansible_distribution_version vars for help).

# TODO: Work out how to determine whether the system was created today or not, and use that to determine whether a dist-upgrade should be run. Running `sudo tune2fs -l /dev/xvda1 | grep created` should give the created date of the filesystem which is a pretty good way to determine system age, and then there's a bunch of useful facts in {{ansible_date_time}} to compare to current.

- hosts: ubuntu
  become: yes
  gather_facts: no # This won't work until we install the needed Python module (see below).

  vars:
    username: tim
    full_name: Tim Malone
    email: tdmalone@gmail.com
    timezone: Australia/Melbourne
    ssh_key: https://raw.githubusercontent.com/tdmalone/dotfiles/master/ssh.pub
    shell: /bin/zsh
    #hostname: ubuntu.tm.id.au # Should be supplied in host_vars.
    aws_region: ap-southeast-2
    new_system: false # WARNING: Should only be used on brand new servers!
    ssh_port: "{{ lookup('env', 'SSH_PORT') }}"



  pre_tasks:

    # @see https://stackoverflow.com/a/34402816/1982136
    # @see http://docs.ansible.com/ansible/latest/modules/raw_module.html
    - name: Check if python-simplejson is installed.
      raw: dpkg-query --show python-simplejson
      register: python_simplejson_installed
      failed_when: python_simplejson_installed.rc > 1
      changed_when: python_simplejson_installed.rc == 1
      check_mode: no # Run even in 'check' mode; the command is safe and we need the output.

    - name: If not, install python-simplejson for Ansible support.
      raw: sudo apt-get install --assume-yes python-simplejson
      when: "python_simplejson_installed.rc == 1"

    - name: Gather facts now that the needed Python module is installed.
      setup: # No args required.

  tasks:

    - name: Include apt installations.
      include_tasks: ./tasks/apt.yml

    - name: Include tasks common to multiple distros.
      include_tasks: ./tasks/common.yml

    # TODO: Set up Papertrail monitoring.
    # @see https://github.com/reactiveops/ansible-papertrail
    # @see https://github.com/aptoma/ansible-papertrail
    # @see https://github.com/azavea/ansible-papertrail
    # @see PAPERTRAIL_HOST & PAPERTRAIL_PORT env vars.

    # TODO: Set up Datadog monitoring.
    # @see https://galaxy.ansible.com/manala/ansible-galaxy/ for possibly installing galaxy roles easily.
    # - include_role:
    #     name: Datadog.datadog
    #   vars:
    #     become: yes
    #     datadog_api_key: "{{ lookup('env', 'DATADOG_API_KEY') }}"

    # TODO: Copy across common Datadog configuration; restart Datadog agent.

    - name: Include amazon-ssm-agent installation.
      include_tasks: ./tasks/aws-ssm.yml

    - name: Include git configuration.
      include_tasks: ./tasks/git.yml

    - name: Install wp-cli.
      include_tasks: ./tasks/wp-cli.yml

    - name: Install the Keybase CLI.
      include_tasks: ./tasks/keybase.yml

    - name: Include Hashicorp installations.
      include_tasks: ./tasks/hashicorp.yml

    # TODO: Install Go.
    # TODO: Set up mounts??
    # TODO: Set up an nginx vhost, and configure with php-fpm.

    # TODO: Download, build and install the LastPass CLI.
    # @see https://github.com/lastpass/lastpass-cli#debianubuntu

    # TODO: Install minikube.
    # @see https://github.com/kubernetes/minikube/releases

    # Install IBM Cloud CLI.
    #wget https://clis.ng.bluemix.net/download/bluemix-cli/0.6.6/linux64
    #tar -zxvf linux64 && rm linux64
    #Bluemix_CLI/install_bluemix_cli

    # TODO: Set up HTTPS for nginx with a LetsEncrypt certificate.
    # @see http://docs.ansible.com/ansible/latest/modules/letsencrypt_module.html

    # TODO: Install and set up a local WordPress site to manage tm.id.au.
    # @see http://docs.ansible.com/ansible/latest/modules/mysql_db_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/mysql_user_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/blockinfile_module.html
    # @see http://docs.ansible.com/ansible/latest/modules/copy_module.html

    # TODO: Install oh-my-zsh.
    # TODO: Set up Cloud9 environment, if possible/neccessary?
    # TODO: Set up crontab with any regular jobs.
    # TODO: Symlink any neccessary configuration files to the cloned dotfiles (from mounted drive).
    # TODO: Set up SSH config and SSH keys (if possible to do it securely).
    # TODO: Set up Ansible hosts.. OR move to dynamic inventory?

    - name: Include notification tasks.
      include_tasks: ./tasks/notifications.yml

    # TODO: Additional interesting roles to look into:
    #       - https://github.com/manala/ansible-role-accounts
    #       - https://github.com/manala/ansible-role-ansible
    #       - https://github.com/manala/ansible-role-ansible-galaxy
    #       - https://github.com/manala/ansible-role-cloud-init
    #       - https://github.com/manala/ansible-role-cron
    #       - https://github.com/manala/ansible-role-docker
    #       - https://github.com/manala/ansible-role-git
    #       - https://github.com/manala/ansible-role-logrotate
    #       - https://github.com/manala/ansible-role-mysql
    #       - https://github.com/manala/ansible-role-nginx
    #       - https://github.com/manala/ansible-role-ohmyzsh
    #       - https://github.com/manala/ansible-role-php
    #       - https://github.com/manala/ansible-role-phpmyadmin
    #       - https://github.com/manala/ansible-role-sudo
    #       - https://github.com/manala/ansible-role-systemd
    #       - https://github.com/manala/ansible-role-vim

...
